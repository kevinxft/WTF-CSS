.container {
  --r: 360deg;
  width: 60vmin;
  height: 60vmin;
  margin: 0 auto 0;
  margin-top: 20vmin;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  gap: 8px;
  grid-template-areas: 
   "A A B"
   "D E B"
   "D C C";
}
/**
CSS的10vmin是一个相对单位，它是指视口宽度和高度中较小的那个的1/10，也就是视口的10%中较小的那个。
其中，“v”表示视窗(viewport)，“min”表示较小值。
例如，如果浏览器窗口的宽度是1000px，高度是800px，那么10vmin将等于80px(因为高度是较小的值)。
CSS的10vmin可以用于响应式布局中，以相对于视口的大小设置元素的大小。
例如，可以将某个元素的宽度设置为10vmin，这样它的宽度将根据视口的大小而自适应，保证在不同尺寸设备上都能得到合适的大小。
**/

.item {
  border: 3px solid #431312;
  overflow: hidden;
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.item img {
  --r: -360deg;
  width: 260%;
  height: 260%;
  object-fit: cover;
}

.container,
.item img {
  animation: rotation 10s linear infinite;
}

@keyframes rotation {
  to {
    transform: rotate(var(--r));
  }
}

.A {
    grid-area: A;
}
.B {
    grid-area: B;
}
.C {
    grid-area: C;
}
.D {
    grid-area: D;
}
.E {
    grid-area: E;
}